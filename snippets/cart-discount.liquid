<style>
  .cart-sidebar-discount {
    display: flex;
    flex-direction: column;
    margin: 20px 0;
  }
  .cart-sidebar-discount input {
    margin-top: 20px;
    background: #eee;
    border: 1px solid #eee;
    height: 50px;
    outline: none;
    font-size: 18px;
    letter-spacing: 0.75px;
    text-align: center;
    width: 100%;
  }
  #apply-discount-btn {
    background-color: #000;
    color: #fff;
    border: 0;
    height: 60px;
    font-size: 18px;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.75px;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 15px;
    padding-inline: 0;
  }
  span.applied-discount-code-value > small {
    background: #eee;
    padding: 0 10px;
    color: #000;
    font-weight: bold;
    border-radius: 20px;
  }
  .loader {
    border: 5px solid #f3f3f3;
    border-top: 4px solid #000;
    border-radius: 50%;
    width: 25px;
    height: 25px;
    animation: spin 0.5s linear infinite;
  }
  #discount-code-error {
    background: #ff00004f;
    color: #e22120;
    padding: 5px;
    border-radius: 4px;
    font-size: 13px;
    line-height: 1;
  }
  .applied-discount-code-wrapper {
    display: none;
    background: #ddd;
    padding: 3px 6px;
    border-radius: 25px;
  }
  .applied-discount-code-value {
    font-size: 13px;
    text-transform: uppercase;
  }

  #discount-code-error:empty {
    display: none;
  }
  .applied-discount-code-value:empty + button {
    display: none;
  }
  .coupon-wrapper {
    display: flex;
    gap: 10px;
    align-items: flex-end;
  }
  #apply-discount-btn {
    height: 50px;
    min-width: 112px;
  }
  #discount-code-totals {
    margin-top: 20px;
    display: flex;
    justify-content: flex-end;
    align-items: flex-end;
  }
  #discount-code-totals * {
    line-height: 1;
    font-size: 1.8rem;
    margin: 0;
  }
  #discount-code-totals h2 {
    font-size: calc(var(--font-heading-scale)* 1.6rem);
  }
  #discount-code-totals .total-value {
    margin-left: 2rem;
  }
  @media screen and (min-width: 750px) {
    .cart-sidebar-discount,
    #applied-discount-code p {
      margin-top: -5px;
    }
    .cart-sidebar-discount {
      padding-left: 2rem;
      width: 100%;
    }
    .cart-sidebar-discount input {
      width: auto;
    }
    #apply-discount-btn {
      padding-inline: 30px;
      width: 100%;
    }
  }
  @keyframes spin {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }
</style>

<div class="cart-sidebar-discount">
  <span id="applied-discount-code">
    <p>Gift card or discount code:</p>
    <p class="applied-discount-code-wrapper">
      <span class="applied-discount-code-value"></span>
      <button id="clear-discount-btn">X</button>
    </p>
  </span>
  <small id="discount-code-error"></small>
  <div class="coupon-wrapper">
    <input
      type="text"
      id="discount-code-input"
      autocomplete="on"
      value=""
    >
    <button id="apply-discount-btn" class="button">APPLY</button>
  </div>
  <div id="discount-code-totals" style="display: none;">
    <h2>Estimated total</h2>
    <p class="total-value"></p>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', async function (event) {
    let clearBtn = document.querySelector('#clear-discount-btn');
    let applyBtn = document.querySelector('#apply-discount-btn');
    let discountCodeError = document.querySelector('#discount-code-error');
    let discountCodeWrapper = document.querySelector('#applied-discount-code .applied-discount-code-wrapper');
    let discountCodeValue = document.querySelector('#applied-discount-code .applied-discount-code-value');
    let discountCodeInput = document.querySelector('#discount-code-input');
    let totalCartSelector = document.querySelector('.cart-sidebar-discount ~ .totals'); // Total Cart Selector to hide.
    let totalSelector = document.querySelector('#discount-code-totals .total-value'); // Total Cart Selector to update the total amount.
    let totalWrapper = document.querySelector('#discount-code-totals'); // Total Cart Selector container.
    let authorization_token;
    let currencySymbol = '{{ cart.currency.symbol }}';

    let clearPaySelector = await waitForElm('square-placement[data-mpid="lily-blanche-1727.myshopify.com"]');
    let klarnaSelector = await waitForElm('klarna-placement');

    let checkoutContainer = document.createElement('div');
    document.body.appendChild(checkoutContainer);

    if (localStorage.discountCode) {
      applyDiscount(JSON.parse(localStorage.discountCode).code);
    } else if (localStorage['lb-upsell-offer-discount']){
      let lbUpsell = JSON.parse(localStorage['lb-upsell-offer-discount']);
      if (lbUpsell.code) {
        applyDiscount(lbUpsell.code);
      }
    }

    applyBtn.addEventListener('click', function (e) {
      e.preventDefault();
      applyDiscount(discountCodeInput.value.trim());
    });

    clearBtn.addEventListener('click', function (e) {
      e.preventDefault();
      clearDiscount();
    });

    function clearDiscount() {
      discountCodeInput.value = '';
      discountCodeValue.innerHTML = '';
      discountCodeError.innerHTML = '';
      clearLocalStorage();
      applyBtn.innerHTML = "REMOVING <div class='loader'></div>";
      applyBtn.style.pointerEvents = 'none';
      fetch('/discount/CLEAR').finally(function (params) {
        applyBtn.innerHTML = 'APPLY';
        applyBtn.style.pointerEvents = 'all';
      });
    }

    function clearLocalStorage() {
      discountCodeWrapper.style.display = 'none';
      if (localStorage.discountCode) {
        totalSelector.innerHTML = '';
        totalWrapper.style.display = "none";
        totalCartSelector.style.display = "";
        clearPaySelector.dataset.amount = localStorage.fullPrice;
        klarnaSelector.dataset.purchaseAmount = localStorage.fullPrice * 100;
        localStorage.removeItem('discountCode');
        localStorage.removeItem('fullPrice');
      }
    }

    function applyDiscount(code) {
      clearDiscount();
      applyBtn.innerHTML = "APPLYING <div class='loader'></div>";
      applyBtn.style.pointerEvents = 'none';
      fetch('/payments/config', { method: 'GET' })
        .then(function (response) {
          return response.json();
        })
        .then(function (paymentsData) {
          const checkout_json_url = '/wallets/checkouts/';
          authorization_token = btoa(paymentsData.paymentInstruments.accessToken);
          fetch('/cart.js', {})
            .then(function (res) {
              return res.json();
            })
            .then(function (checkoutData) {
              let body = {
                checkout: {
                  discount_code: code,
                  line_items: checkoutData.items,
                  presentment_currency: Shopify.currency.active,
                },
              };
              fetch(checkout_json_url, {
                headers: {
                  accept: '*/*',
                  'cache-control': 'no-cache',
                  authorization: 'Basic ' + authorization_token,
                  'content-type': 'application/json, text/javascript',
                  pragma: 'no-cache',
                  'sec-fetch-dest': 'empty',
                  'sec-fetch-mode': 'cors',
                  'sec-fetch-site': 'same-origin',
                },
                referrerPolicy: 'strict-origin-when-cross-origin',
                method: 'POST',
                mode: 'cors',
                credentials: 'include',
                body: JSON.stringify(body),
              })
                .then(function (checkoutResponse) {
                  return checkoutResponse.json();
                })
                .then(function (data) {
                  if (data.checkout && data.checkout.applied_discounts.length > 0) {
                    let discountApplyUrl = '/discount/' + code + '?v=' + Date.now() + '&redirect=/checkout/';
                    fetch(discountApplyUrl, {}).then(function (response) {
                      return response.text();
                    });
                    discountCodeError.innerHTML = '';
                    discountCodeWrapper.style.display = 'inline';
                    discountCodeValue.innerHTML = `${data.checkout.applied_discounts[0].title} (${data.checkout.applied_discounts[0].amount} ${Shopify.currency.active})`;
                    let localStorageValue = {
                      code: code.trim(),
                      totalCart: data.checkout.total_line_items_price,
                    };
                    localStorage.setItem('discountCode', JSON.stringify(localStorageValue));
                    localStorage.setItem('fullPrice', data.checkout.total_line_items_price);
                    totalSelector.innerHTML = `${currencySymbol}<s>${data.checkout.total_line_items_price}</s><br/>${currencySymbol}${data.checkout.total_price}</div>`;
                    clearPaySelector.dataset.amount = data.checkout.total_price;
                    klarnaSelector.dataset.purchaseAmount = data.checkout.total_price * 100;
                    totalCartSelector.style.display = "none";
                    totalWrapper.style.display = "";
                  } else {
                    discountCodeValue.innerHTML = '';
                    clearLocalStorage();
                    discountCodeError.innerHTML = 'Please Enter Valid Coupon Code.';
                  }
                })
                .finally(function (params) {
                  applyBtn.innerHTML = 'APPLY';
                  applyBtn.style.pointerEvents = 'all';
                });
            });
        });
    }

    var time = new Date().getTime();
    $(document.body).bind('mousemove keypress', function (e) {
      refresh();
    });

    function refresh() {
      if (new Date().getTime() - time >= 600000) window.location.reload(true);
    }

    function waitForElm(selector) {
      return new Promise(resolve => {
          if (document.querySelector(selector)) {
              return resolve(document.querySelector(selector));
          }

          const observer = new MutationObserver(mutations => {
              if (document.querySelector(selector)) {
                  observer.disconnect();
                  resolve(document.querySelector(selector));
              }
          });

          // If you get "parameter 1 is not of type 'Node'" error, see https://stackoverflow.com/a/77855838/492336
          observer.observe(document.body, {
              childList: true,
              subtree: true
          });
      });
    }
  });
</script>
